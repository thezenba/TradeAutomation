import pandas as pd
import numpy as np
import os
import sys
from datetime import datetime

# ConfiguraÃ§Ã£o de caminhos para importaÃ§Ãµes
PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), "../.."))
SRC_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))

# Adicionar diretÃ³rios ao sys.path
sys.path.insert(0, PROJECT_ROOT)
sys.path.insert(0, SRC_DIR)

def getElderRayTradeStrategy(
    stock_data: pd.DataFrame,
    period: int = 14,
    ma_type: str = 'ema',
    bull_power_threshold: float = 0.0,
    bear_power_threshold: float = 0.0,
    verbose: bool = True
):
    """
    EstratÃ©gia baseada em Elder Ray.
    
    O Elder Ray, desenvolvido por Dr. Alexander Elder, consiste em dois indicadores:
    - Bull Power: mede a capacidade dos compradores de elevar o preÃ§o acima da mÃ©dia mÃ³vel
    - Bear Power: mede a capacidade dos vendedores de empurrar o preÃ§o abaixo da mÃ©dia mÃ³vel
    
    ParÃ¢metros:
    - period: PerÃ­odo para cÃ¡lculo da mÃ©dia mÃ³vel
    - ma_type: Tipo de mÃ©dia mÃ³vel ('sma' ou 'ema')
    - bull_power_threshold: Limiar para o Bull Power considerar um sinal
    - bear_power_threshold: Limiar para o Bear Power considerar um sinal
    """
    stock_data = stock_data.copy()
    
    # Verificar se temos os dados necessÃ¡rios
    required_columns = ['high', 'low', 'close']
    
    # Converter nomes de colunas para minÃºsculas se necessÃ¡rio
    stock_data.columns = [col.lower() for col in stock_data.columns]
    
    for col in required_columns:
        if col not in stock_data.columns:
            raise ValueError(f"Coluna {col} nÃ£o encontrada nos dados.")
    
    # Calcular a mÃ©dia mÃ³vel
    if ma_type.lower() == 'ema':
        stock_data['ma'] = stock_data['close'].ewm(span=period, adjust=False).mean()
    else:  # default to SMA
        stock_data['ma'] = stock_data['close'].rolling(window=period).mean()
    
    # Calcular o Bull Power e Bear Power
    stock_data['bull_power'] = stock_data['high'] - stock_data['ma']
    stock_data['bear_power'] = stock_data['low'] - stock_data['ma']
    
    # Extrair valores atuais
    current_ma = stock_data['ma'].iloc[-1]
    current_bull_power = stock_data['bull_power'].iloc[-1]
    current_bear_power = stock_data['bear_power'].iloc[-1]
    
    prev_bull_power = stock_data['bull_power'].iloc[-2] if len(stock_data) > 1 else current_bull_power
    prev_bear_power = stock_data['bear_power'].iloc[-2] if len(stock_data) > 1 else current_bear_power
    
    # Determinar tendÃªncia atual da mÃ©dia mÃ³vel
    ma_trend_up = stock_data['ma'].diff().iloc[-1] > 0
    
    # Determinar o estado atual do Bull e Bear Power
    is_bull_power_rising = current_bull_power > prev_bull_power
    is_bear_power_rising = current_bear_power > prev_bear_power
    
    # Gerar sinais de compra e venda com base nas regras Elder Ray
    
    # Regra de compra:
    # 1. A mÃ©dia mÃ³vel deve estar em tendÃªncia de alta (inclinaÃ§Ã£o positiva)
    # 2. Bear Power deve ser negativo, mas aumentando (menos negativo) - ursos estÃ£o perdendo forÃ§a
    # 3. Bull Power deve ser positivo - touros ainda tÃªm forÃ§a
    buy_signal = ma_trend_up and (current_bear_power < bear_power_threshold) and is_bear_power_rising and (current_bull_power > bull_power_threshold)
    
    # Regra de venda:
    # 1. A mÃ©dia mÃ³vel deve estar em tendÃªncia de baixa (inclinaÃ§Ã£o negativa)
    # 2. Bull Power deve ser positivo, mas diminuindo - touros estÃ£o perdendo forÃ§a
    # 3. Bear Power deve ser negativo - ursos ainda tÃªm forÃ§a
    sell_signal = not ma_trend_up and (current_bull_power > bull_power_threshold) and not is_bull_power_rising and (current_bear_power < bear_power_threshold)
    
    # DecisÃ£o final
    trade_decision = None
    
    if buy_signal:
        trade_decision = True  # Comprar
    elif sell_signal:
        trade_decision = False  # Vender
    
    if verbose:
        print("-------")
        print(f"ğŸ“Š EstratÃ©gia: Elder Ray")
        print(f" | PerÃ­odo: {period}")
        print(f" | Tipo de MÃ©dia MÃ³vel: {ma_type.upper()}")
        print(f" | MÃ©dia MÃ³vel: {current_ma:.2f}")
        print(f" | TendÃªncia da MA: {'Subindo' if ma_trend_up else 'Descendo'}")
        print(f" | Bull Power: {current_bull_power:.4f}")
        print(f" | Bull Power Anterior: {prev_bull_power:.4f}")
        print(f" | Bull Power Crescendo: {is_bull_power_rising}")
        print(f" | Bear Power: {current_bear_power:.4f}")
        print(f" | Bear Power Anterior: {prev_bear_power:.4f}")
        print(f" | Bear Power Crescendo: {is_bear_power_rising}")
        print(f" | DecisÃ£o: {'Comprar' if trade_decision == True else 'Vender' if trade_decision == False else 'Nenhuma'}")
        print("-------")
    
    return trade_decision